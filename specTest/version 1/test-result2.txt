

  2.1.2.1: When fulfilled, a promise: must not transition to any other state.
    √ already-fulfilled
    √ immediately-fulfilled
    √ eventually-fulfilled
    √ trying to fulfill then immediately reject
    √ trying to fulfill then reject, delayed
    √ trying to fulfill immediately then reject delayed

  2.1.3.1: When rejected, a promise: must not transition to any other state.
    √ already-rejected
    √ immediately-rejected
    √ eventually-rejected
    √ trying to reject then immediately fulfill
    √ trying to reject then fulfill, delayed
    √ trying to reject immediately then fulfill delayed

  2.2.1: Both `onFulfilled` and `onRejected` are optional arguments.
    2.2.1.1: If `onFulfilled` is not a function, it must be ignored.
      applied to a directly-rejected promise
        √ `onFulfilled` is `undefined`
        √ `onFulfilled` is `null`
        √ `onFulfilled` is `false`
        √ `onFulfilled` is `5`
        √ `onFulfilled` is an object
      applied to a promise rejected and then chained off of
        √ `onFulfilled` is `undefined`
        √ `onFulfilled` is `null`
        √ `onFulfilled` is `false`
        √ `onFulfilled` is `5`
        √ `onFulfilled` is an object
    2.2.1.2: If `onRejected` is not a function, it must be ignored.
      applied to a directly-fulfilled promise
        √ `onRejected` is `undefined`
        √ `onRejected` is `null`
        √ `onRejected` is `false`
        √ `onRejected` is `5`
        √ `onRejected` is an object
      applied to a promise fulfilled and then chained off of
        √ `onFulfilled` is `undefined`
        √ `onFulfilled` is `null`
        √ `onFulfilled` is `false`
        √ `onFulfilled` is `5`
        √ `onFulfilled` is an object

  2.2.2: If `onFulfilled` is a function,
    2.2.2.1: it must be called after `promise` is fulfilled, with `promise`’s fulfillment value as its first argument.
      √ already-fulfilled
      √ immediately-fulfilled
      √ eventually-fulfilled
    2.2.2.2: it must not be called before `promise` is fulfilled
      √ fulfilled after a delay
      √ never fulfilled
    2.2.2.3: it must not be called more than once.
      √ already-fulfilled
      √ trying to fulfill a pending promise more than once, immediately
      √ trying to fulfill a pending promise more than once, delayed
      √ trying to fulfill a pending promise more than once, immediately then delayed
      √ when multiple `then` calls are made, spaced apart in time
      √ when `then` is interleaved with fulfillment

  2.2.3: If `onRejected` is a function,
    2.2.3.1: it must be called after `promise` is rejected, with `promise`’s rejection reason as its first argument.
      1) already-rejected
      2) immediately-rejected
      3) eventually-rejected
    2.2.3.2: it must not be called before `promise` is rejected
      √ rejected after a delay
      √ never rejected
    2.2.3.3: it must not be called more than once.
      √ already-rejected
      √ trying to reject a pending promise more than once, immediately
      √ trying to reject a pending promise more than once, delayed
      √ trying to reject a pending promise more than once, immediately then delayed
      √ when multiple `then` calls are made, spaced apart in time
      √ when `then` is interleaved with rejection

  2.2.4: `onFulfilled` or `onRejected` must not be called until the execution context stack contains only platform code.
    `then` returns before the promise becomes fulfilled or rejected
      √ already-fulfilled
      √ immediately-fulfilled
      √ eventually-fulfilled
      √ already-rejected
      √ immediately-rejected
      √ eventually-rejected
    Clean-stack execution ordering tests (fulfillment case)
      √ when `onFulfilled` is added immediately before the promise is fulfilled
      √ when `onFulfilled` is added immediately after the promise is fulfilled
      √ when one `onFulfilled` is added inside another `onFulfilled`
      √ when `onFulfilled` is added inside an `onRejected`
      √ when the promise is fulfilled asynchronously
    Clean-stack execution ordering tests (rejection case)
      √ when `onRejected` is added immediately before the promise is rejected
      √ when `onRejected` is added immediately after the promise is rejected
      √ when `onRejected` is added inside an `onFulfilled`
      √ when one `onRejected` is added inside another `onRejected`
      √ when the promise is rejected asynchronously

  2.2.5 `onFulfilled` and `onRejected` must be called as functions (i.e. with no `this` value).
    strict mode
      √ fulfilled
      √ rejected
    sloppy mode
      √ fulfilled
      √ rejected

  2.2.6: `then` may be called multiple times on the same promise.
    2.2.6.1: If/when `promise` is fulfilled, all respective `onFulfilled` callbacks must execute in the order of their originating calls to `then`.
      multiple boring fulfillment handlers
        √ already-fulfilled
        √ immediately-fulfilled
        √ eventually-fulfilled
      multiple fulfillment handlers, one of which throws
        4) already-fulfilled
        5) immediately-fulfilled
        6) eventually-fulfilled
      results in multiple branching chains with their own fulfillment values
        7) already-fulfilled
        8) immediately-fulfilled
        9) eventually-fulfilled
      `onFulfilled` handlers are called in the original order
        √ already-fulfilled
        √ immediately-fulfilled
        √ eventually-fulfilled
        even when one handler is added inside another handler
          √ already-fulfilled
          √ immediately-fulfilled
          √ eventually-fulfilled
    2.2.6.2: If/when `promise` is rejected, all respective `onRejected` callbacks must execute in the order of their originating calls to `then`.
      multiple boring rejection handlers
        10) already-rejected
        11) immediately-rejected
        12) eventually-rejected
      multiple rejection handlers, one of which throws
        13) already-rejected
        14) immediately-rejected
        15) eventually-rejected
      results in multiple branching chains with their own fulfillment values
        16) already-rejected
        17) immediately-rejected
        18) eventually-rejected
      `onRejected` handlers are called in the original order
        √ already-rejected
        √ immediately-rejected
        √ eventually-rejected
        even when one handler is added inside another handler
          √ already-rejected
          √ immediately-rejected
          √ eventually-rejected

  2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)`
    √ is a promise
    2.2.7.1: If either `onFulfilled` or `onRejected` returns a value `x`, run the Promise Resolution Procedure `[[Resolve]](promise2, x)`
      √ see separate 3.3 tests
    2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason.
      The reason is `undefined`
        19) already-fulfilled
        20) immediately-fulfilled
        21) eventually-fulfilled
        22) already-rejected
        23) immediately-rejected
        24) eventually-rejected
      The reason is `null`
        25) already-fulfilled
        26) immediately-fulfilled
        27) eventually-fulfilled
        28) already-rejected
        29) immediately-rejected
        30) eventually-rejected
      The reason is `false`
        31) already-fulfilled
        32) immediately-fulfilled
        33) eventually-fulfilled
        34) already-rejected
        35) immediately-rejected
        36) eventually-rejected
      The reason is `0`
        37) already-fulfilled
        38) immediately-fulfilled
        39) eventually-fulfilled
        40) already-rejected
        41) immediately-rejected
        42) eventually-rejected
      The reason is an error
        43) already-fulfilled
        44) immediately-fulfilled
        45) eventually-fulfilled
        46) already-rejected
        47) immediately-rejected
        48) eventually-rejected
      The reason is an error without a stack
        49) already-fulfilled
        50) immediately-fulfilled
        51) eventually-fulfilled
        52) already-rejected
        53) immediately-rejected
        54) eventually-rejected
      The reason is a date
        55) already-fulfilled
        56) immediately-fulfilled
        57) eventually-fulfilled
        58) already-rejected
        59) immediately-rejected
        60) eventually-rejected
      The reason is an object
        61) already-fulfilled
        62) immediately-fulfilled
        63) eventually-fulfilled
        64) already-rejected
        65) immediately-rejected
        66) eventually-rejected
      The reason is an always-pending thenable
        67) already-fulfilled
        68) immediately-fulfilled
        69) eventually-fulfilled
        70) already-rejected
        71) immediately-rejected
        72) eventually-rejected
      The reason is a fulfilled promise
        73) already-fulfilled
        74) immediately-fulfilled
        75) eventually-fulfilled
        76) already-rejected
        77) immediately-rejected
        78) eventually-rejected
      The reason is a rejected promise
        79) already-fulfilled
        80) immediately-fulfilled
        81) eventually-fulfilled
        82) already-rejected
        83) immediately-rejected
        84) eventually-rejected
    2.2.7.3: If `onFulfilled` is not a function and `promise1` is fulfilled, `promise2` must be fulfilled with the same value.
      `onFulfilled` is `undefined`
        √ already-fulfilled
        √ immediately-fulfilled
        √ eventually-fulfilled
      `onFulfilled` is `null`
        √ already-fulfilled
        √ immediately-fulfilled
        √ eventually-fulfilled
      `onFulfilled` is `false`
        √ already-fulfilled
        √ immediately-fulfilled
        √ eventually-fulfilled
      `onFulfilled` is `5`
        √ already-fulfilled
        √ immediately-fulfilled
        √ eventually-fulfilled
      `onFulfilled` is an object
        √ already-fulfilled
        √ immediately-fulfilled
        √ eventually-fulfilled
      `onFulfilled` is an array containing a function
        √ already-fulfilled
        √ immediately-fulfilled
        √ eventually-fulfilled
    2.2.7.4: If `onRejected` is not a function and `promise1` is rejected, `promise2` must be rejected with the same reason.
      `onRejected` is `undefined`
        85) already-rejected
        86) immediately-rejected
        87) eventually-rejected
      `onRejected` is `null`
        88) already-rejected
        89) immediately-rejected
        90) eventually-rejected
      `onRejected` is `false`
        91) already-rejected
        92) immediately-rejected
        93) eventually-rejected
      `onRejected` is `5`
        94) already-rejected
        95) immediately-rejected
        96) eventually-rejected
      `onRejected` is an object
        97) already-rejected
        98) immediately-rejected
        99) eventually-rejected
      `onRejected` is an array containing a function
        100) already-rejected
        101) immediately-rejected
        102) eventually-rejected

  2.3.1: If `promise` and `x` refer to the same object, reject `promise` with a `TypeError' as the reason.
    103) via return from a fulfilled promise
    104) via return from a rejected promise

  2.3.2: If `x` is a promise, adopt its state
    2.3.2.1: If `x` is pending, `promise` must remain pending until `x` is fulfilled or rejected.
      105) via return from a fulfilled promise
      106) via return from a rejected promise
    2.3.2.2: If/when `x` is fulfilled, fulfill `promise` with the same value.
      `x` is already-fulfilled
        107) via return from a fulfilled promise
        108) via return from a rejected promise
      `x` is eventually-fulfilled
        109) via return from a fulfilled promise
        110) via return from a rejected promise
    2.3.2.3: If/when `x` is rejected, reject `promise` with the same reason.
      `x` is already-rejected
        111) via return from a fulfilled promise
        112) via return from a rejected promise
      `x` is eventually-rejected
        113) via return from a fulfilled promise
        114) via return from a rejected promise

  2.3.3: Otherwise, if `x` is an object or function,
    2.3.3.1: Let `then` be `x.then`
      `x` is an object with null prototype
        115) via return from a fulfilled promise
        116) via return from a rejected promise
      `x` is an object with normal Object.prototype
        117) via return from a fulfilled promise
        118) via return from a rejected promise
      `x` is a function
        119) via return from a fulfilled promise
        120) via return from a rejected promise
    2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason.
      `e` is `undefined`
        121) via return from a fulfilled promise
        122) via return from a rejected promise
      `e` is `null`
        123) via return from a fulfilled promise
        124) via return from a rejected promise
      `e` is `false`
        125) via return from a fulfilled promise
        126) via return from a rejected promise
      `e` is `0`
        127) via return from a fulfilled promise
        128) via return from a rejected promise
      `e` is an error
        129) via return from a fulfilled promise
        130) via return from a rejected promise
      `e` is an error without a stack
        131) via return from a fulfilled promise
        132) via return from a rejected promise
      `e` is a date
        133) via return from a fulfilled promise
        134) via return from a rejected promise
      `e` is an object
        135) via return from a fulfilled promise
        136) via return from a rejected promise
      `e` is an always-pending thenable
        137) via return from a fulfilled promise
        138) via return from a rejected promise
      `e` is a fulfilled promise
        139) via return from a fulfilled promise
        140) via return from a rejected promise
      `e` is a rejected promise
        141) via return from a fulfilled promise
        142) via return from a rejected promise
    2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise`
      Calls with `x` as `this` and two function arguments
        √ via return from a fulfilled promise
        143) via return from a rejected promise
      Uses the original value of `then`
        √ via return from a fulfilled promise
        144) via return from a rejected promise
      2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)`
        `y` is not a thenable
          `y` is `undefined`
            `then` calls `resolvePromise` synchronously
              145) via return from a fulfilled promise
              146) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              147) via return from a fulfilled promise
              148) via return from a rejected promise
          `y` is `null`
            `then` calls `resolvePromise` synchronously
              149) via return from a fulfilled promise
              150) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              151) via return from a fulfilled promise
              152) via return from a rejected promise
          `y` is `false`
            `then` calls `resolvePromise` synchronously
              153) via return from a fulfilled promise
              154) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              155) via return from a fulfilled promise
              156) via return from a rejected promise
          `y` is `5`
            `then` calls `resolvePromise` synchronously
              157) via return from a fulfilled promise
              158) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              159) via return from a fulfilled promise
              160) via return from a rejected promise
          `y` is an object
            `then` calls `resolvePromise` synchronously
              161) via return from a fulfilled promise
              162) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              163) via return from a fulfilled promise
              164) via return from a rejected promise
          `y` is an array
            `then` calls `resolvePromise` synchronously
              165) via return from a fulfilled promise
              166) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              167) via return from a fulfilled promise
              168) via return from a rejected promise
        `y` is a thenable
          `y` is a synchronously-fulfilled custom thenable
            `then` calls `resolvePromise` synchronously
              169) via return from a fulfilled promise
              170) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              171) via return from a fulfilled promise
              172) via return from a rejected promise
          `y` is an asynchronously-fulfilled custom thenable
            `then` calls `resolvePromise` synchronously
              173) via return from a fulfilled promise
              174) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              175) via return from a fulfilled promise
              176) via return from a rejected promise
          `y` is a synchronously-fulfilled one-time thenable
            `then` calls `resolvePromise` synchronously
              177) via return from a fulfilled promise
              178) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              179) via return from a fulfilled promise
              180) via return from a rejected promise
          `y` is a thenable that tries to fulfill twice
            `then` calls `resolvePromise` synchronously
              181) via return from a fulfilled promise
              182) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              183) via return from a fulfilled promise
              184) via return from a rejected promise
          `y` is a thenable that fulfills but then throws
            `then` calls `resolvePromise` synchronously
              185) via return from a fulfilled promise
              186) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              187) via return from a fulfilled promise
              188) via return from a rejected promise
          `y` is an already-fulfilled promise
            `then` calls `resolvePromise` synchronously
              189) via return from a fulfilled promise
              190) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              191) via return from a fulfilled promise
              192) via return from a rejected promise
          `y` is an eventually-fulfilled promise
            `then` calls `resolvePromise` synchronously
              193) via return from a fulfilled promise
              194) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              195) via return from a fulfilled promise
              196) via return from a rejected promise
          `y` is a synchronously-rejected custom thenable
            `then` calls `resolvePromise` synchronously
              197) via return from a fulfilled promise
              198) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              199) via return from a fulfilled promise
              200) via return from a rejected promise
          `y` is an asynchronously-rejected custom thenable
            `then` calls `resolvePromise` synchronously
              201) via return from a fulfilled promise
              202) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              203) via return from a fulfilled promise
              204) via return from a rejected promise
          `y` is a synchronously-rejected one-time thenable
            `then` calls `resolvePromise` synchronously
              205) via return from a fulfilled promise
              206) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              207) via return from a fulfilled promise
              208) via return from a rejected promise
          `y` is a thenable that immediately throws in `then`
            `then` calls `resolvePromise` synchronously
              209) via return from a fulfilled promise
              210) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              211) via return from a fulfilled promise
              212) via return from a rejected promise
          `y` is an object with a throwing `then` accessor
            `then` calls `resolvePromise` synchronously
              213) via return from a fulfilled promise
              214) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              215) via return from a fulfilled promise
              216) via return from a rejected promise
          `y` is an already-rejected promise
            `then` calls `resolvePromise` synchronously
              217) via return from a fulfilled promise
              218) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              219) via return from a fulfilled promise
              220) via return from a rejected promise
          `y` is an eventually-rejected promise
            `then` calls `resolvePromise` synchronously
              221) via return from a fulfilled promise
              222) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              223) via return from a fulfilled promise
              224) via return from a rejected promise
        `y` is a thenable for a thenable
          `y` is a synchronously-fulfilled custom thenable for a synchronously-fulfilled custom thenable
            `then` calls `resolvePromise` synchronously
              225) via return from a fulfilled promise
              226) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              227) via return from a fulfilled promise
              228) via return from a rejected promise
          `y` is a synchronously-fulfilled custom thenable for an asynchronously-fulfilled custom thenable
            `then` calls `resolvePromise` synchronously
              229) via return from a fulfilled promise
              230) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              231) via return from a fulfilled promise
              232) via return from a rejected promise
          `y` is a synchronously-fulfilled custom thenable for a synchronously-fulfilled one-time thenable
            `then` calls `resolvePromise` synchronously
              233) via return from a fulfilled promise
              234) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              235) via return from a fulfilled promise
              236) via return from a rejected promise
          `y` is a synchronously-fulfilled custom thenable for a thenable that tries to fulfill twice
            `then` calls `resolvePromise` synchronously
              237) via return from a fulfilled promise
              238) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              239) via return from a fulfilled promise
              240) via return from a rejected promise
          `y` is a synchronously-fulfilled custom thenable for a thenable that fulfills but then throws
            `then` calls `resolvePromise` synchronously
              241) via return from a fulfilled promise
              242) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              243) via return from a fulfilled promise
              244) via return from a rejected promise
          `y` is a synchronously-fulfilled custom thenable for an already-fulfilled promise
            `then` calls `resolvePromise` synchronously
              245) via return from a fulfilled promise
              246) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              247) via return from a fulfilled promise
              248) via return from a rejected promise
          `y` is a synchronously-fulfilled custom thenable for an eventually-fulfilled promise
            `then` calls `resolvePromise` synchronously
              249) via return from a fulfilled promise
              250) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              251) via return from a fulfilled promise
              252) via return from a rejected promise
          `y` is a synchronously-fulfilled custom thenable for a synchronously-rejected custom thenable
            `then` calls `resolvePromise` synchronously
              253) via return from a fulfilled promise
              254) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              255) via return from a fulfilled promise
              256) via return from a rejected promise
          `y` is a synchronously-fulfilled custom thenable for an asynchronously-rejected custom thenable
            `then` calls `resolvePromise` synchronously
              257) via return from a fulfilled promise
              258) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              259) via return from a fulfilled promise
              260) via return from a rejected promise
          `y` is a synchronously-fulfilled custom thenable for a synchronously-rejected one-time thenable
            `then` calls `resolvePromise` synchronously
              261) via return from a fulfilled promise
              262) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              263) via return from a fulfilled promise
              264) via return from a rejected promise
          `y` is a synchronously-fulfilled custom thenable for a thenable that immediately throws in `then`
            `then` calls `resolvePromise` synchronously
              265) via return from a fulfilled promise
              266) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              267) via return from a fulfilled promise
              268) via return from a rejected promise
          `y` is a synchronously-fulfilled custom thenable for an object with a throwing `then` accessor
            `then` calls `resolvePromise` synchronously
              269) via return from a fulfilled promise
              270) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              271) via return from a fulfilled promise
              272) via return from a rejected promise
          `y` is a synchronously-fulfilled custom thenable for an already-rejected promise
            `then` calls `resolvePromise` synchronously
              273) via return from a fulfilled promise
              274) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              275) via return from a fulfilled promise
              276) via return from a rejected promise
          `y` is a synchronously-fulfilled custom thenable for an eventually-rejected promise
            `then` calls `resolvePromise` synchronously
              277) via return from a fulfilled promise
              278) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              279) via return from a fulfilled promise
              280) via return from a rejected promise
          `y` is an asynchronously-fulfilled custom thenable for a synchronously-fulfilled custom thenable
            `then` calls `resolvePromise` synchronously
              281) via return from a fulfilled promise
              282) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              283) via return from a fulfilled promise
              284) via return from a rejected promise
          `y` is an asynchronously-fulfilled custom thenable for an asynchronously-fulfilled custom thenable
            `then` calls `resolvePromise` synchronously
              285) via return from a fulfilled promise
              286) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              287) via return from a fulfilled promise
              288) via return from a rejected promise
          `y` is an asynchronously-fulfilled custom thenable for a synchronously-fulfilled one-time thenable
            `then` calls `resolvePromise` synchronously
              289) via return from a fulfilled promise
              290) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              291) via return from a fulfilled promise
              292) via return from a rejected promise
          `y` is an asynchronously-fulfilled custom thenable for a thenable that tries to fulfill twice
            `then` calls `resolvePromise` synchronously
              293) via return from a fulfilled promise
              294) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              295) via return from a fulfilled promise
              296) via return from a rejected promise
          `y` is an asynchronously-fulfilled custom thenable for a thenable that fulfills but then throws
            `then` calls `resolvePromise` synchronously
              297) via return from a fulfilled promise
              298) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              299) via return from a fulfilled promise
              300) via return from a rejected promise
          `y` is an asynchronously-fulfilled custom thenable for an already-fulfilled promise
            `then` calls `resolvePromise` synchronously
              301) via return from a fulfilled promise
              302) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              303) via return from a fulfilled promise
              304) via return from a rejected promise
          `y` is an asynchronously-fulfilled custom thenable for an eventually-fulfilled promise
            `then` calls `resolvePromise` synchronously
              305) via return from a fulfilled promise
              306) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              307) via return from a fulfilled promise
              308) via return from a rejected promise
          `y` is an asynchronously-fulfilled custom thenable for a synchronously-rejected custom thenable
            `then` calls `resolvePromise` synchronously
              309) via return from a fulfilled promise
              310) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              311) via return from a fulfilled promise
              312) via return from a rejected promise
          `y` is an asynchronously-fulfilled custom thenable for an asynchronously-rejected custom thenable
            `then` calls `resolvePromise` synchronously
              313) via return from a fulfilled promise
              314) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              315) via return from a fulfilled promise
              316) via return from a rejected promise
          `y` is an asynchronously-fulfilled custom thenable for a synchronously-rejected one-time thenable
            `then` calls `resolvePromise` synchronously
              317) via return from a fulfilled promise
              318) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              319) via return from a fulfilled promise
              320) via return from a rejected promise
          `y` is an asynchronously-fulfilled custom thenable for a thenable that immediately throws in `then`
            `then` calls `resolvePromise` synchronously
              321) via return from a fulfilled promise
              322) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              323) via return from a fulfilled promise
              324) via return from a rejected promise
          `y` is an asynchronously-fulfilled custom thenable for an object with a throwing `then` accessor
            `then` calls `resolvePromise` synchronously
              325) via return from a fulfilled promise
              326) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              327) via return from a fulfilled promise
              328) via return from a rejected promise
          `y` is an asynchronously-fulfilled custom thenable for an already-rejected promise
            `then` calls `resolvePromise` synchronously
              329) via return from a fulfilled promise
              330) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              331) via return from a fulfilled promise
              332) via return from a rejected promise
          `y` is an asynchronously-fulfilled custom thenable for an eventually-rejected promise
            `then` calls `resolvePromise` synchronously
              333) via return from a fulfilled promise
              334) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              335) via return from a fulfilled promise
              336) via return from a rejected promise
          `y` is a synchronously-fulfilled one-time thenable for a synchronously-fulfilled custom thenable
            `then` calls `resolvePromise` synchronously
              337) via return from a fulfilled promise
              338) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              339) via return from a fulfilled promise
              340) via return from a rejected promise
          `y` is a synchronously-fulfilled one-time thenable for an asynchronously-fulfilled custom thenable
            `then` calls `resolvePromise` synchronously
              341) via return from a fulfilled promise
              342) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              343) via return from a fulfilled promise
              344) via return from a rejected promise
          `y` is a synchronously-fulfilled one-time thenable for a synchronously-fulfilled one-time thenable
            `then` calls `resolvePromise` synchronously
              345) via return from a fulfilled promise
              346) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              347) via return from a fulfilled promise
              348) via return from a rejected promise
          `y` is a synchronously-fulfilled one-time thenable for a thenable that tries to fulfill twice
            `then` calls `resolvePromise` synchronously
              349) via return from a fulfilled promise
              350) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              351) via return from a fulfilled promise
              352) via return from a rejected promise
          `y` is a synchronously-fulfilled one-time thenable for a thenable that fulfills but then throws
            `then` calls `resolvePromise` synchronously
              353) via return from a fulfilled promise
              354) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              355) via return from a fulfilled promise
              356) via return from a rejected promise
          `y` is a synchronously-fulfilled one-time thenable for an already-fulfilled promise
            `then` calls `resolvePromise` synchronously
              357) via return from a fulfilled promise
              358) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              359) via return from a fulfilled promise
              360) via return from a rejected promise
          `y` is a synchronously-fulfilled one-time thenable for an eventually-fulfilled promise
            `then` calls `resolvePromise` synchronously
              361) via return from a fulfilled promise
              362) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              363) via return from a fulfilled promise
              364) via return from a rejected promise
          `y` is a synchronously-fulfilled one-time thenable for a synchronously-rejected custom thenable
            `then` calls `resolvePromise` synchronously
              365) via return from a fulfilled promise
              366) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              367) via return from a fulfilled promise
              368) via return from a rejected promise
          `y` is a synchronously-fulfilled one-time thenable for an asynchronously-rejected custom thenable
            `then` calls `resolvePromise` synchronously
              369) via return from a fulfilled promise
              370) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              371) via return from a fulfilled promise
              372) via return from a rejected promise
          `y` is a synchronously-fulfilled one-time thenable for a synchronously-rejected one-time thenable
            `then` calls `resolvePromise` synchronously
              373) via return from a fulfilled promise
              374) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              375) via return from a fulfilled promise
              376) via return from a rejected promise
          `y` is a synchronously-fulfilled one-time thenable for a thenable that immediately throws in `then`
            `then` calls `resolvePromise` synchronously
              377) via return from a fulfilled promise
              378) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              379) via return from a fulfilled promise
              380) via return from a rejected promise
          `y` is a synchronously-fulfilled one-time thenable for an object with a throwing `then` accessor
            `then` calls `resolvePromise` synchronously
              381) via return from a fulfilled promise
              382) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              383) via return from a fulfilled promise
              384) via return from a rejected promise
          `y` is a synchronously-fulfilled one-time thenable for an already-rejected promise
            `then` calls `resolvePromise` synchronously
              385) via return from a fulfilled promise
              386) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              387) via return from a fulfilled promise
              388) via return from a rejected promise
          `y` is a synchronously-fulfilled one-time thenable for an eventually-rejected promise
            `then` calls `resolvePromise` synchronously
              389) via return from a fulfilled promise
              390) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              391) via return from a fulfilled promise
              392) via return from a rejected promise
          `y` is a thenable that tries to fulfill twice for a synchronously-fulfilled custom thenable
            `then` calls `resolvePromise` synchronously
              393) via return from a fulfilled promise
              394) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              395) via return from a fulfilled promise
              396) via return from a rejected promise
          `y` is a thenable that tries to fulfill twice for an asynchronously-fulfilled custom thenable
            `then` calls `resolvePromise` synchronously
              397) via return from a fulfilled promise
              398) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              399) via return from a fulfilled promise
              400) via return from a rejected promise
          `y` is a thenable that tries to fulfill twice for a synchronously-fulfilled one-time thenable
            `then` calls `resolvePromise` synchronously
              401) via return from a fulfilled promise
              402) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              403) via return from a fulfilled promise
              404) via return from a rejected promise
          `y` is a thenable that tries to fulfill twice for a thenable that tries to fulfill twice
            `then` calls `resolvePromise` synchronously
              405) via return from a fulfilled promise
              406) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              407) via return from a fulfilled promise
              408) via return from a rejected promise
          `y` is a thenable that tries to fulfill twice for a thenable that fulfills but then throws
            `then` calls `resolvePromise` synchronously
              409) via return from a fulfilled promise
              410) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              411) via return from a fulfilled promise
              412) via return from a rejected promise
          `y` is a thenable that tries to fulfill twice for an already-fulfilled promise
            `then` calls `resolvePromise` synchronously
              413) via return from a fulfilled promise
              414) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              415) via return from a fulfilled promise
              416) via return from a rejected promise
          `y` is a thenable that tries to fulfill twice for an eventually-fulfilled promise
            `then` calls `resolvePromise` synchronously
              417) via return from a fulfilled promise
              418) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              419) via return from a fulfilled promise
              420) via return from a rejected promise
          `y` is a thenable that tries to fulfill twice for a synchronously-rejected custom thenable
            `then` calls `resolvePromise` synchronously
              421) via return from a fulfilled promise
              422) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              423) via return from a fulfilled promise
              424) via return from a rejected promise
          `y` is a thenable that tries to fulfill twice for an asynchronously-rejected custom thenable
            `then` calls `resolvePromise` synchronously
              425) via return from a fulfilled promise
              426) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              427) via return from a fulfilled promise
              428) via return from a rejected promise
          `y` is a thenable that tries to fulfill twice for a synchronously-rejected one-time thenable
            `then` calls `resolvePromise` synchronously
              429) via return from a fulfilled promise
              430) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              431) via return from a fulfilled promise
              432) via return from a rejected promise
          `y` is a thenable that tries to fulfill twice for a thenable that immediately throws in `then`
            `then` calls `resolvePromise` synchronously
              433) via return from a fulfilled promise
              434) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              435) via return from a fulfilled promise
              436) via return from a rejected promise
          `y` is a thenable that tries to fulfill twice for an object with a throwing `then` accessor
            `then` calls `resolvePromise` synchronously
              437) via return from a fulfilled promise
              438) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              439) via return from a fulfilled promise
              440) via return from a rejected promise
          `y` is a thenable that tries to fulfill twice for an already-rejected promise
            `then` calls `resolvePromise` synchronously
              441) via return from a fulfilled promise
              442) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              443) via return from a fulfilled promise
              444) via return from a rejected promise
          `y` is a thenable that tries to fulfill twice for an eventually-rejected promise
            `then` calls `resolvePromise` synchronously
              445) via return from a fulfilled promise
              446) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              447) via return from a fulfilled promise
              448) via return from a rejected promise
          `y` is a thenable that fulfills but then throws for a synchronously-fulfilled custom thenable
            `then` calls `resolvePromise` synchronously
              449) via return from a fulfilled promise
              450) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              451) via return from a fulfilled promise
              452) via return from a rejected promise
          `y` is a thenable that fulfills but then throws for an asynchronously-fulfilled custom thenable
            `then` calls `resolvePromise` synchronously
              453) via return from a fulfilled promise
              454) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              455) via return from a fulfilled promise
              456) via return from a rejected promise
          `y` is a thenable that fulfills but then throws for a synchronously-fulfilled one-time thenable
            `then` calls `resolvePromise` synchronously
              457) via return from a fulfilled promise
              458) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              459) via return from a fulfilled promise
              460) via return from a rejected promise
          `y` is a thenable that fulfills but then throws for a thenable that tries to fulfill twice
            `then` calls `resolvePromise` synchronously
              461) via return from a fulfilled promise
              462) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              463) via return from a fulfilled promise
              464) via return from a rejected promise
          `y` is a thenable that fulfills but then throws for a thenable that fulfills but then throws
            `then` calls `resolvePromise` synchronously
              465) via return from a fulfilled promise
              466) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              467) via return from a fulfilled promise
              468) via return from a rejected promise
          `y` is a thenable that fulfills but then throws for an already-fulfilled promise
            `then` calls `resolvePromise` synchronously
              469) via return from a fulfilled promise
              470) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              471) via return from a fulfilled promise
              472) via return from a rejected promise
          `y` is a thenable that fulfills but then throws for an eventually-fulfilled promise
            `then` calls `resolvePromise` synchronously
              473) via return from a fulfilled promise
              474) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              475) via return from a fulfilled promise
              476) via return from a rejected promise
          `y` is a thenable that fulfills but then throws for a synchronously-rejected custom thenable
            `then` calls `resolvePromise` synchronously
              477) via return from a fulfilled promise
              478) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              479) via return from a fulfilled promise
              480) via return from a rejected promise
          `y` is a thenable that fulfills but then throws for an asynchronously-rejected custom thenable
            `then` calls `resolvePromise` synchronously
              481) via return from a fulfilled promise
              482) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              483) via return from a fulfilled promise
              484) via return from a rejected promise
          `y` is a thenable that fulfills but then throws for a synchronously-rejected one-time thenable
            `then` calls `resolvePromise` synchronously
              485) via return from a fulfilled promise
              486) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              487) via return from a fulfilled promise
              488) via return from a rejected promise
          `y` is a thenable that fulfills but then throws for a thenable that immediately throws in `then`
            `then` calls `resolvePromise` synchronously
              489) via return from a fulfilled promise
              490) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              491) via return from a fulfilled promise
              492) via return from a rejected promise
          `y` is a thenable that fulfills but then throws for an object with a throwing `then` accessor
            `then` calls `resolvePromise` synchronously
              493) via return from a fulfilled promise
              494) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              495) via return from a fulfilled promise
              496) via return from a rejected promise
          `y` is a thenable that fulfills but then throws for an already-rejected promise
            `then` calls `resolvePromise` synchronously
              497) via return from a fulfilled promise
              498) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              499) via return from a fulfilled promise
              500) via return from a rejected promise
          `y` is a thenable that fulfills but then throws for an eventually-rejected promise
            `then` calls `resolvePromise` synchronously
              501) via return from a fulfilled promise
              502) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              503) via return from a fulfilled promise
              504) via return from a rejected promise
          `y` is an already-fulfilled promise for a synchronously-fulfilled custom thenable
            `then` calls `resolvePromise` synchronously
              505) via return from a fulfilled promise
              506) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              507) via return from a fulfilled promise
              508) via return from a rejected promise
          `y` is an already-fulfilled promise for an asynchronously-fulfilled custom thenable
            `then` calls `resolvePromise` synchronously
              509) via return from a fulfilled promise
              510) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              511) via return from a fulfilled promise
              512) via return from a rejected promise
          `y` is an already-fulfilled promise for a synchronously-fulfilled one-time thenable
            `then` calls `resolvePromise` synchronously
              513) via return from a fulfilled promise
              514) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              515) via return from a fulfilled promise
              516) via return from a rejected promise
          `y` is an already-fulfilled promise for a thenable that tries to fulfill twice
            `then` calls `resolvePromise` synchronously
              517) via return from a fulfilled promise
              518) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              519) via return from a fulfilled promise
              520) via return from a rejected promise
          `y` is an already-fulfilled promise for a thenable that fulfills but then throws
            `then` calls `resolvePromise` synchronously
              521) via return from a fulfilled promise
              522) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              523) via return from a fulfilled promise
              524) via return from a rejected promise
          `y` is an already-fulfilled promise for an already-fulfilled promise
            `then` calls `resolvePromise` synchronously
              525) via return from a fulfilled promise
              526) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              527) via return from a fulfilled promise
              528) via return from a rejected promise
          `y` is an already-fulfilled promise for an eventually-fulfilled promise
            `then` calls `resolvePromise` synchronously
              529) via return from a fulfilled promise
              530) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              531) via return from a fulfilled promise
              532) via return from a rejected promise
          `y` is an already-fulfilled promise for a synchronously-rejected custom thenable
            `then` calls `resolvePromise` synchronously
              533) via return from a fulfilled promise
              534) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              535) via return from a fulfilled promise
              536) via return from a rejected promise
          `y` is an already-fulfilled promise for an asynchronously-rejected custom thenable
            `then` calls `resolvePromise` synchronously
              537) via return from a fulfilled promise
              538) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              539) via return from a fulfilled promise
              540) via return from a rejected promise
          `y` is an already-fulfilled promise for a synchronously-rejected one-time thenable
            `then` calls `resolvePromise` synchronously
              541) via return from a fulfilled promise
              542) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              543) via return from a fulfilled promise
              544) via return from a rejected promise
          `y` is an already-fulfilled promise for a thenable that immediately throws in `then`
            `then` calls `resolvePromise` synchronously
              545) via return from a fulfilled promise
              546) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              547) via return from a fulfilled promise
              548) via return from a rejected promise
          `y` is an already-fulfilled promise for an object with a throwing `then` accessor
            `then` calls `resolvePromise` synchronously
              549) via return from a fulfilled promise
              550) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              551) via return from a fulfilled promise
              552) via return from a rejected promise
          `y` is an already-fulfilled promise for an already-rejected promise
            `then` calls `resolvePromise` synchronously
              553) via return from a fulfilled promise
              554) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              555) via return from a fulfilled promise
              556) via return from a rejected promise
          `y` is an already-fulfilled promise for an eventually-rejected promise
            `then` calls `resolvePromise` synchronously
              557) via return from a fulfilled promise
              558) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              559) via return from a fulfilled promise
              560) via return from a rejected promise
          `y` is an eventually-fulfilled promise for a synchronously-fulfilled custom thenable
            `then` calls `resolvePromise` synchronously
              561) via return from a fulfilled promise
              562) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              563) via return from a fulfilled promise
              564) via return from a rejected promise
          `y` is an eventually-fulfilled promise for an asynchronously-fulfilled custom thenable
            `then` calls `resolvePromise` synchronously
              565) via return from a fulfilled promise
              566) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              567) via return from a fulfilled promise
              568) via return from a rejected promise
          `y` is an eventually-fulfilled promise for a synchronously-fulfilled one-time thenable
            `then` calls `resolvePromise` synchronously
              569) via return from a fulfilled promise
              570) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              571) via return from a fulfilled promise
              572) via return from a rejected promise
          `y` is an eventually-fulfilled promise for a thenable that tries to fulfill twice
            `then` calls `resolvePromise` synchronously
              573) via return from a fulfilled promise
              574) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              575) via return from a fulfilled promise
              576) via return from a rejected promise
          `y` is an eventually-fulfilled promise for a thenable that fulfills but then throws
            `then` calls `resolvePromise` synchronously
              577) via return from a fulfilled promise
              578) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              579) via return from a fulfilled promise
              580) via return from a rejected promise
          `y` is an eventually-fulfilled promise for an already-fulfilled promise
            `then` calls `resolvePromise` synchronously
              581) via return from a fulfilled promise
              582) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              583) via return from a fulfilled promise
              584) via return from a rejected promise
          `y` is an eventually-fulfilled promise for an eventually-fulfilled promise
            `then` calls `resolvePromise` synchronously
              585) via return from a fulfilled promise
              586) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              587) via return from a fulfilled promise
              588) via return from a rejected promise
          `y` is an eventually-fulfilled promise for a synchronously-rejected custom thenable
            `then` calls `resolvePromise` synchronously
              589) via return from a fulfilled promise
              590) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              591) via return from a fulfilled promise
              592) via return from a rejected promise
          `y` is an eventually-fulfilled promise for an asynchronously-rejected custom thenable
            `then` calls `resolvePromise` synchronously
              593) via return from a fulfilled promise
              594) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              595) via return from a fulfilled promise
              596) via return from a rejected promise
          `y` is an eventually-fulfilled promise for a synchronously-rejected one-time thenable
            `then` calls `resolvePromise` synchronously
              597) via return from a fulfilled promise
              598) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              599) via return from a fulfilled promise
              600) via return from a rejected promise
          `y` is an eventually-fulfilled promise for a thenable that immediately throws in `then`
            `then` calls `resolvePromise` synchronously
              601) via return from a fulfilled promise
              602) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              603) via return from a fulfilled promise
              604) via return from a rejected promise
          `y` is an eventually-fulfilled promise for an object with a throwing `then` accessor
            `then` calls `resolvePromise` synchronously
              605) via return from a fulfilled promise
              606) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              607) via return from a fulfilled promise
              608) via return from a rejected promise
          `y` is an eventually-fulfilled promise for an already-rejected promise
            `then` calls `resolvePromise` synchronously
              609) via return from a fulfilled promise
              610) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              611) via return from a fulfilled promise
              612) via return from a rejected promise
          `y` is an eventually-fulfilled promise for an eventually-rejected promise
            `then` calls `resolvePromise` synchronously
              613) via return from a fulfilled promise
              614) via return from a rejected promise
            `then` calls `resolvePromise` asynchronously
              615) via return from a fulfilled promise
              616) via return from a rejected promise
      2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r`
        `r` is `undefined`
          `then` calls `rejectPromise` synchronously
            617) via return from a fulfilled promise
            618) via return from a rejected promise
          `then` calls `rejectPromise` asynchronously
            619) via return from a fulfilled promise
            620) via return from a rejected promise
        `r` is `null`
          `then` calls `rejectPromise` synchronously
            621) via return from a fulfilled promise
            622) via return from a rejected promise
          `then` calls `rejectPromise` asynchronously
            623) via return from a fulfilled promise
            624) via return from a rejected promise
        `r` is `false`
          `then` calls `rejectPromise` synchronously
            625) via return from a fulfilled promise
            626) via return from a rejected promise
          `then` calls `rejectPromise` asynchronously
            627) via return from a fulfilled promise
            628) via return from a rejected promise
        `r` is `0`
          `then` calls `rejectPromise` synchronously
            629) via return from a fulfilled promise
            630) via return from a rejected promise
          `then` calls `rejectPromise` asynchronously
            631) via return from a fulfilled promise
            632) via return from a rejected promise
        `r` is an error
          `then` calls `rejectPromise` synchronously
            633) via return from a fulfilled promise
            634) via return from a rejected promise
          `then` calls `rejectPromise` asynchronously
            635) via return from a fulfilled promise
            636) via return from a rejected promise
        `r` is an error without a stack
          `then` calls `rejectPromise` synchronously
            637) via return from a fulfilled promise
            638) via return from a rejected promise
          `then` calls `rejectPromise` asynchronously
            639) via return from a fulfilled promise
            640) via return from a rejected promise
        `r` is a date
          `then` calls `rejectPromise` synchronously
            641) via return from a fulfilled promise
            642) via return from a rejected promise
          `then` calls `rejectPromise` asynchronously
            643) via return from a fulfilled promise
            644) via return from a rejected promise
        `r` is an object
          `then` calls `rejectPromise` synchronously
            645) via return from a fulfilled promise
            646) via return from a rejected promise
          `then` calls `rejectPromise` asynchronously
            647) via return from a fulfilled promise
            648) via return from a rejected promise
        `r` is an always-pending thenable
          `then` calls `rejectPromise` synchronously
            649) via return from a fulfilled promise
            650) via return from a rejected promise
          `then` calls `rejectPromise` asynchronously
            651) via return from a fulfilled promise
            652) via return from a rejected promise
        `r` is a fulfilled promise
          `then` calls `rejectPromise` synchronously
            653) via return from a fulfilled promise
            654) via return from a rejected promise
          `then` calls `rejectPromise` asynchronously
            655) via return from a fulfilled promise
            656) via return from a rejected promise
        `r` is a rejected promise
          `then` calls `rejectPromise` synchronously
            657) via return from a fulfilled promise
            658) via return from a rejected promise
          `then` calls `rejectPromise` asynchronously
            659) via return from a fulfilled promise
            660) via return from a rejected promise
      2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored.
        calling `resolvePromise` then `rejectPromise`, both synchronously
          661) via return from a fulfilled promise
          662) via return from a rejected promise
        calling `resolvePromise` synchronously then `rejectPromise` asynchronously
          663) via return from a fulfilled promise
          664) via return from a rejected promise
        calling `resolvePromise` then `rejectPromise`, both asynchronously
          665) via return from a fulfilled promise
          666) via return from a rejected promise
        calling `resolvePromise` with an asynchronously-fulfilled promise, then calling `rejectPromise`, both synchronously
          667) via return from a fulfilled promise
          668) via return from a rejected promise
        calling `resolvePromise` with an asynchronously-rejected promise, then calling `rejectPromise`, both synchronously
          669) via return from a fulfilled promise
          670) via return from a rejected promise
        calling `rejectPromise` then `resolvePromise`, both synchronously
          671) via return from a fulfilled promise
          672) via return from a rejected promise
        calling `rejectPromise` synchronously then `resolvePromise` asynchronously
          673) via return from a fulfilled promise
          674) via return from a rejected promise
        calling `rejectPromise` then `resolvePromise`, both asynchronously
          675) via return from a fulfilled promise
          676) via return from a rejected promise
        calling `resolvePromise` twice synchronously
          677) via return from a fulfilled promise
          678) via return from a rejected promise
        calling `resolvePromise` twice, first synchronously then asynchronously
          679) via return from a fulfilled promise
          680) via return from a rejected promise
        calling `resolvePromise` twice, both times asynchronously
          681) via return from a fulfilled promise
          682) via return from a rejected promise
        calling `resolvePromise` with an asynchronously-fulfilled promise, then calling it again, both times synchronously
          683) via return from a fulfilled promise
          684) via return from a rejected promise
        calling `resolvePromise` with an asynchronously-rejected promise, then calling it again, both times synchronously
          685) via return from a fulfilled promise
          686) via return from a rejected promise
        calling `rejectPromise` twice synchronously
          687) via return from a fulfilled promise
          688) via return from a rejected promise
        calling `rejectPromise` twice, first synchronously then asynchronously
          689) via return from a fulfilled promise
          690) via return from a rejected promise
        calling `rejectPromise` twice, both times asynchronously
          691) via return from a fulfilled promise
          692) via return from a rejected promise
        saving and abusing `resolvePromise` and `rejectPromise`
          693) via return from a fulfilled promise
          √ via return from a rejected promise
      2.3.3.3.4: If calling `then` throws an exception `e`,
        2.3.3.3.4.1: If `resolvePromise` or `rejectPromise` have been called, ignore it.
          `resolvePromise` was called with a non-thenable
            694) via return from a fulfilled promise
            695) via return from a rejected promise
          `resolvePromise` was called with an asynchronously-fulfilled promise
            696) via return from a fulfilled promise
            697) via return from a rejected promise
          `resolvePromise` was called with an asynchronously-rejected promise
            698) via return from a fulfilled promise
            699) via return from a rejected promise
          `rejectPromise` was called
            700) via return from a fulfilled promise
            701) via return from a rejected promise
          `resolvePromise` then `rejectPromise` were called
            702) via return from a fulfilled promise
            703) via return from a rejected promise
          `rejectPromise` then `resolvePromise` were called
            704) via return from a fulfilled promise
            705) via return from a rejected promise
        2.3.3.3.4.2: Otherwise, reject `promise` with `e` as the reason.
          straightforward case
            706) via return from a fulfilled promise
            707) via return from a rejected promise
          `resolvePromise` is called asynchronously before the `throw`
            708) via return from a fulfilled promise
            709) via return from a rejected promise
          `rejectPromise` is called asynchronously before the `throw`
            710) via return from a fulfilled promise
            711) via return from a rejected promise
    2.3.3.4: If `then` is not a function, fulfill promise with `x`
      `then` is `5`
        √ via return from a fulfilled promise
        712) via return from a rejected promise
      `then` is an object
        √ via return from a fulfilled promise
        713) via return from a rejected promise
      `then` is an array containing a function
        √ via return from a fulfilled promise
        714) via return from a rejected promise
      `then` is a regular expression
        √ via return from a fulfilled promise
        715) via return from a rejected promise
      `then` is an object inheriting from `Function.prototype`
        √ via return from a fulfilled promise
        716) via return from a rejected promise

  2.3.4: If `x` is not an object or function, fulfill `promise` with `x`
    The value is `undefined`
      √ already-fulfilled
      √ immediately-fulfilled
      √ eventually-fulfilled
      717) already-rejected
      718) immediately-rejected
      719) eventually-rejected
    The value is `null`
      √ already-fulfilled
      √ immediately-fulfilled
      √ eventually-fulfilled
      720) already-rejected
      721) immediately-rejected
      722) eventually-rejected
    The value is `false`
      √ already-fulfilled
      √ immediately-fulfilled
      √ eventually-fulfilled
      723) already-rejected
      724) immediately-rejected
      725) eventually-rejected
    The value is `true`
      √ already-fulfilled
      √ immediately-fulfilled
      √ eventually-fulfilled
      726) already-rejected
      727) immediately-rejected
      728) eventually-rejected
    The value is `0`
      √ already-fulfilled
      √ immediately-fulfilled
      √ eventually-fulfilled
      729) already-rejected
      730) immediately-rejected
      731) eventually-rejected
    The value is `true` with `Boolean.prototype` modified to have a `then` method
      √ already-fulfilled
      √ immediately-fulfilled
      √ eventually-fulfilled
      732) already-rejected
      733) immediately-rejected
      734) eventually-rejected
    The value is `1` with `Number.prototype` modified to have a `then` method
      √ already-fulfilled
      √ immediately-fulfilled
      √ eventually-fulfilled
      735) already-rejected
      736) immediately-rejected
      737) eventually-rejected


  135 passing (1m)
  737 failing

  1) 2.2.3: If `onRejected` is a function, 2.2.3.1: it must be called after `promise` is rejected, with `promise`’s rejection reason as its first argument. already-rejected:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:126:13
    at new _Pro === { sentinel: 'sentinel' }
      at onRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.3.js:18:24)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  2) 2.2.3: If `onRejected` is a function, 2.2.3.1: it must be called after `promise` is rejected, with `promise`’s rejection reason as its first argument. immediately-rejected:
     Uncaught AssertionError: Error: [object Object]
    at Object.reject (C:\CODE\Promise\Promise.js:45:26)
    at Context.<anonymous> (C:\CODE\Promise\node_ === { sentinel: 'sentinel' }
      at onRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.3.js:18:24)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  3) 2.2.3: If `onRejected` is a function, 2.2.3.1: it must be called after `promise` is rejected, with `promise`’s rejection reason as its first argument. eventually-rejected:
     Uncaught AssertionError: Error: [object Object]
    at Object.reject (C:\CODE\Promise\Promise.js:45:26)
    at Timeout._onTimeout (C:\CODE\Promise\node_m === { sentinel: 'sentinel' }
      at onRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.3.js:18:24)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  4) 2.2.6: `then` may be called multiple times on the same promise. 2.2.6.1: If/when `promise` is fulfilled, all respective `onFulfilled` callbacks must execute in the order of their originating calls to `then`. multiple fulfillment handlers, one of which throws already-fulfilled:
     Error: the object {
  "other": "other"
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  5) 2.2.6: `then` may be called multiple times on the same promise. 2.2.6.1: If/when `promise` is fulfilled, all respective `onFulfilled` callbacks must execute in the order of their originating calls to `then`. multiple fulfillment handlers, one of which throws immediately-fulfilled:
     Error: the object {
  "other": "other"
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  6) 2.2.6: `then` may be called multiple times on the same promise. 2.2.6.1: If/when `promise` is fulfilled, all respective `onFulfilled` callbacks must execute in the order of their originating calls to `then`. multiple fulfillment handlers, one of which throws eventually-fulfilled:
     Error: the object {
  "other": "other"
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  7) 2.2.6: `then` may be called multiple times on the same promise. 2.2.6.1: If/when `promise` is fulfilled, all respective `onFulfilled` callbacks must execute in the order of their originating calls to `then`. results in multiple branching chains with their own fulfillment values already-fulfilled:
     Error: the object {
  "sentinel2": "sentinel2"
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  8) 2.2.6: `then` may be called multiple times on the same promise. 2.2.6.1: If/when `promise` is fulfilled, all respective `onFulfilled` callbacks must execute in the order of their originating calls to `then`. results in multiple branching chains with their own fulfillment values immediately-fulfilled:
     Error: the object {
  "sentinel2": "sentinel2"
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  9) 2.2.6: `then` may be called multiple times on the same promise. 2.2.6.1: If/when `promise` is fulfilled, all respective `onFulfilled` callbacks must execute in the order of their originating calls to `then`. results in multiple branching chains with their own fulfillment values eventually-fulfilled:
     Error: the object {
  "sentinel2": "sentinel2"
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  10) 2.2.6: `then` may be called multiple times on the same promise. 2.2.6.2: If/when `promise` is rejected, all respective `onRejected` callbacks must execute in the order of their originating calls to `then`. multiple boring rejection handlers already-rejected:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:126:13
    at new _Pro === { sentinel: 'sentinel' }
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.6.js:155:28
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  11) 2.2.6: `then` may be called multiple times on the same promise. 2.2.6.2: If/when `promise` is rejected, all respective `onRejected` callbacks must execute in the order of their originating calls to `then`. multiple boring rejection handlers immediately-rejected:
     Uncaught AssertionError: Error: [object Object]
    at Object.reject (C:\CODE\Promise\Promise.js:45:26)
    at Context.<anonymous> (C:\CODE\Promise\node_ === { sentinel: 'sentinel' }
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.6.js:155:28
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  12) 2.2.6: `then` may be called multiple times on the same promise. 2.2.6.2: If/when `promise` is rejected, all respective `onRejected` callbacks must execute in the order of their originating calls to `then`. multiple boring rejection handlers eventually-rejected:
     Uncaught AssertionError: Error: [object Object]
    at Object.reject (C:\CODE\Promise\Promise.js:45:26)
    at Timeout._onTimeout (C:\CODE\Promise\node_m === { sentinel: 'sentinel' }
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.6.js:155:28
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  13) 2.2.6: `then` may be called multiple times on the same promise. 2.2.6.2: If/when `promise` is rejected, all respective `onRejected` callbacks must execute in the order of their originating calls to `then`. multiple rejection handlers, one of which throws already-rejected:
     Error: the object {
  "other": "other"
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  14) 2.2.6: `then` may be called multiple times on the same promise. 2.2.6.2: If/when `promise` is rejected, all respective `onRejected` callbacks must execute in the order of their originating calls to `then`. multiple rejection handlers, one of which throws immediately-rejected:
     Error: the object {
  "other": "other"
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  15) 2.2.6: `then` may be called multiple times on the same promise. 2.2.6.2: If/when `promise` is rejected, all respective `onRejected` callbacks must execute in the order of their originating calls to `then`. multiple rejection handlers, one of which throws eventually-rejected:
     Error: the object {
  "other": "other"
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  16) 2.2.6: `then` may be called multiple times on the same promise. 2.2.6.2: If/when `promise` is rejected, all respective `onRejected` callbacks must execute in the order of their originating calls to `then`. results in multiple branching chains with their own fulfillment values already-rejected:
     Error: the object {
  "sentinel2": "sentinel2"
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  17) 2.2.6: `then` may be called multiple times on the same promise. 2.2.6.2: If/when `promise` is rejected, all respective `onRejected` callbacks must execute in the order of their originating calls to `then`. results in multiple branching chains with their own fulfillment values immediately-rejected:
     Error: the object {
  "sentinel2": "sentinel2"
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  18) 2.2.6: `then` may be called multiple times on the same promise. 2.2.6.2: If/when `promise` is rejected, all respective `onRejected` callbacks must execute in the order of their originating calls to `then`. results in multiple branching chains with their own fulfillment values eventually-rejected:
     Error: the object {
  "sentinel2": "sentinel2"
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  19) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `undefined` already-fulfilled:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  20) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `undefined` immediately-fulfilled:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  21) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `undefined` eventually-fulfilled:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  22) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `undefined` already-rejected:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  23) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `undefined` immediately-rejected:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  24) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `undefined` eventually-rejected:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  25) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `null` already-fulfilled:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  26) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `null` immediately-fulfilled:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  27) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `null` eventually-fulfilled:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  28) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `null` already-rejected:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  29) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `null` immediately-rejected:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  30) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `null` eventually-rejected:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  31) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `false` already-fulfilled:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  32) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `false` immediately-fulfilled:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  33) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `false` eventually-fulfilled:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  34) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `false` already-rejected:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  35) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `false` immediately-rejected:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  36) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `false` eventually-rejected:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  37) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `0` already-fulfilled:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  38) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `0` immediately-fulfilled:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  39) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `0` eventually-fulfilled:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  40) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `0` already-rejected:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  41) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `0` immediately-rejected:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  42) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is `0` eventually-rejected:
     Uncaught Error: Caught undefined error, did you throw without specifying what?
      at exports.undefinedError (C:\CODE\Promise\node_modules\mocha\lib\utils.js:680:10)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:667:11)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  43) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an error already-fulfilled:
     Uncaught 
  rror
      at Object.exports.an error (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\helpers\reasons.js:28:12)
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:58:53
      at Array.forEach (native)
      at Suite.<anonymous> (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:57:30)
      at context.describe.context.context (C:\CODE\Promise\node_modules\mocha\lib\interfaces\bdd.js:47:10)
      at Suite.<anonymous> (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:30:5)
      at context.describe.context.context (C:\CODE\Promise\node_modules\mocha\lib\interfaces\bdd.js:47:10)
      at Object.<anonymous> (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:15:1)

  44) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an error immediately-fulfilled:
     Uncaught 
  rror
      at Object.exports.an error (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\helpers\reasons.js:28:12)
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:58:53
      at Array.forEach (native)
      at Suite.<anonymous> (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:57:30)
      at context.describe.context.context (C:\CODE\Promise\node_modules\mocha\lib\interfaces\bdd.js:47:10)
      at Suite.<anonymous> (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:30:5)
      at context.describe.context.context (C:\CODE\Promise\node_modules\mocha\lib\interfaces\bdd.js:47:10)
      at Object.<anonymous> (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:15:1)

  45) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an error eventually-fulfilled:
     Uncaught 
  rror
      at Object.exports.an error (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\helpers\reasons.js:28:12)
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:58:53
      at Array.forEach (native)
      at Suite.<anonymous> (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:57:30)
      at context.describe.context.context (C:\CODE\Promise\node_modules\mocha\lib\interfaces\bdd.js:47:10)
      at Suite.<anonymous> (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:30:5)
      at context.describe.context.context (C:\CODE\Promise\node_modules\mocha\lib\interfaces\bdd.js:47:10)
      at Object.<anonymous> (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:15:1)

  46) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an error already-rejected:
     Uncaught 
  rror
      at Object.exports.an error (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\helpers\reasons.js:28:12)
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:58:53
      at Array.forEach (native)
      at Suite.<anonymous> (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:57:30)
      at context.describe.context.context (C:\CODE\Promise\node_modules\mocha\lib\interfaces\bdd.js:47:10)
      at Suite.<anonymous> (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:30:5)
      at context.describe.context.context (C:\CODE\Promise\node_modules\mocha\lib\interfaces\bdd.js:47:10)
      at Object.<anonymous> (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:15:1)

  47) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an error immediately-rejected:
     Uncaught 
  rror
      at Object.exports.an error (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\helpers\reasons.js:28:12)
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:58:53
      at Array.forEach (native)
      at Suite.<anonymous> (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:57:30)
      at context.describe.context.context (C:\CODE\Promise\node_modules\mocha\lib\interfaces\bdd.js:47:10)
      at Suite.<anonymous> (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:30:5)
      at context.describe.context.context (C:\CODE\Promise\node_modules\mocha\lib\interfaces\bdd.js:47:10)
      at Object.<anonymous> (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:15:1)

  48) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an error eventually-rejected:
     Uncaught 
  rror
      at Object.exports.an error (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\helpers\reasons.js:28:12)
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:58:53
      at Array.forEach (native)
      at Suite.<anonymous> (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:57:30)
      at context.describe.context.context (C:\CODE\Promise\node_modules\mocha\lib\interfaces\bdd.js:47:10)
      at Suite.<anonymous> (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:30:5)
      at context.describe.context.context (C:\CODE\Promise\node_modules\mocha\lib\interfaces\bdd.js:47:10)
      at Object.<anonymous> (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:15:1)

  49) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an error without a stack already-fulfilled:
     Uncaught 
  

  50) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an error without a stack immediately-fulfilled:
     Uncaught 
  

  51) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an error without a stack eventually-fulfilled:
     Uncaught 
  

  52) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an error without a stack already-rejected:
     Uncaught 
  

  53) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an error without a stack immediately-rejected:
     Uncaught 
  

  54) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an error without a stack eventually-rejected:
     Uncaught 
  

  55) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is a date already-fulfilled:
     Error: the date [Date: 2017-04-09T19:05:20.421Z] was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  56) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is a date immediately-fulfilled:
     Error: the date [Date: 2017-04-09T19:05:20.421Z] was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  57) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is a date eventually-fulfilled:
     Error: the date [Date: 2017-04-09T19:05:20.421Z] was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  58) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is a date already-rejected:
     Error: the date [Date: 2017-04-09T19:05:20.421Z] was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  59) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is a date immediately-rejected:
     Error: the date [Date: 2017-04-09T19:05:20.421Z] was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  60) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is a date eventually-rejected:
     Error: the date [Date: 2017-04-09T19:05:20.421Z] was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  61) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an object already-fulfilled:
     Error: the object {
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  62) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an object immediately-fulfilled:
     Error: the object {
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  63) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an object eventually-fulfilled:
     Error: the object {
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  64) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an object already-rejected:
     Error: the object {
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  65) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an object immediately-rejected:
     Error: the object {
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  66) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an object eventually-rejected:
     Error: the object {
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  67) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an always-pending thenable already-fulfilled:
     Error: the object {
  "then": [Function]
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  68) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an always-pending thenable immediately-fulfilled:
     Error: the object {
  "then": [Function]
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  69) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an always-pending thenable eventually-fulfilled:
     Error: the object {
  "then": [Function]
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  70) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an always-pending thenable already-rejected:
     Error: the object {
  "then": [Function]
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  71) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an always-pending thenable immediately-rejected:
     Error: the object {
  "then": [Function]
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  72) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is an always-pending thenable eventually-rejected:
     Error: the object {
  "then": [Function]
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  73) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is a fulfilled promise already-fulfilled:
     Error: the object {
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  74) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is a fulfilled promise immediately-fulfilled:
     Error: the object {
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  75) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is a fulfilled promise eventually-fulfilled:
     Error: the object {
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  76) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is a fulfilled promise already-rejected:
     Error: the object {
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  77) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is a fulfilled promise immediately-rejected:
     Error: the object {
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  78) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is a fulfilled promise eventually-rejected:
     Error: the object {
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  79) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is a rejected promise already-fulfilled:
     Error: the object {
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  80) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is a rejected promise immediately-fulfilled:
     Error: the object {
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  81) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is a rejected promise eventually-fulfilled:
     Error: the object {
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  82) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is a rejected promise already-rejected:
     Error: the object {
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  83) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is a rejected promise immediately-rejected:
     Error: the object {
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  84) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.2: If either `onFulfilled` or `onRejected` throws an exception `e`, `promise2` must be rejected with `e` as the reason. The reason is a rejected promise eventually-rejected:
     Error: the object {
  "uncaught": true
} was thrown, throw an Error :)
      at Runner.fail (C:\CODE\Promise\node_modules\mocha\lib\runner.js:226:11)
      at Runner.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:695:8)
      at process.uncaught (C:\CODE\Promise\node_modules\mocha\lib\runner.js:778:10)
      at process._fatalException (bootstrap_node.js:297:26)

  85) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.4: If `onRejected` is not a function and `promise1` is rejected, `promise2` must be rejected with the same reason. `onRejected` is `undefined` already-rejected:
     Uncaught AssertionError: Error: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Ti === { sentinel: 'sentinel' }
      at onPromise2Rejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:95:32)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  86) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.4: If `onRejected` is not a function and `promise1` is rejected, `promise2` must be rejected with the same reason. `onRejected` is `undefined` immediately-rejected:
     Uncaught AssertionError: Error: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Ti === { sentinel: 'sentinel' }
      at onPromise2Rejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:95:32)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  87) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.4: If `onRejected` is not a function and `promise1` is rejected, `promise2` must be rejected with the same reason. `onRejected` is `undefined` eventually-rejected:
     Uncaught AssertionError: Error: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Ti === { sentinel: 'sentinel' }
      at onPromise2Rejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:95:32)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  88) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.4: If `onRejected` is not a function and `promise1` is rejected, `promise2` must be rejected with the same reason. `onRejected` is `null` already-rejected:
     Uncaught AssertionError: Error: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Ti === { sentinel: 'sentinel' }
      at onPromise2Rejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:95:32)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  89) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.4: If `onRejected` is not a function and `promise1` is rejected, `promise2` must be rejected with the same reason. `onRejected` is `null` immediately-rejected:
     Uncaught AssertionError: Error: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Ti === { sentinel: 'sentinel' }
      at onPromise2Rejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:95:32)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  90) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.4: If `onRejected` is not a function and `promise1` is rejected, `promise2` must be rejected with the same reason. `onRejected` is `null` eventually-rejected:
     Uncaught AssertionError: Error: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Ti === { sentinel: 'sentinel' }
      at onPromise2Rejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:95:32)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  91) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.4: If `onRejected` is not a function and `promise1` is rejected, `promise2` must be rejected with the same reason. `onRejected` is `false` already-rejected:
     Uncaught AssertionError: Error: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Ti === { sentinel: 'sentinel' }
      at onPromise2Rejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:95:32)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  92) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.4: If `onRejected` is not a function and `promise1` is rejected, `promise2` must be rejected with the same reason. `onRejected` is `false` immediately-rejected:
     Uncaught AssertionError: Error: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Ti === { sentinel: 'sentinel' }
      at onPromise2Rejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:95:32)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  93) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.4: If `onRejected` is not a function and `promise1` is rejected, `promise2` must be rejected with the same reason. `onRejected` is `false` eventually-rejected:
     Uncaught AssertionError: Error: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Ti === { sentinel: 'sentinel' }
      at onPromise2Rejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:95:32)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  94) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.4: If `onRejected` is not a function and `promise1` is rejected, `promise2` must be rejected with the same reason. `onRejected` is `5` already-rejected:
     Uncaught AssertionError: Error: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Ti === { sentinel: 'sentinel' }
      at onPromise2Rejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:95:32)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  95) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.4: If `onRejected` is not a function and `promise1` is rejected, `promise2` must be rejected with the same reason. `onRejected` is `5` immediately-rejected:
     Uncaught AssertionError: Error: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Ti === { sentinel: 'sentinel' }
      at onPromise2Rejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:95:32)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  96) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.4: If `onRejected` is not a function and `promise1` is rejected, `promise2` must be rejected with the same reason. `onRejected` is `5` eventually-rejected:
     Uncaught AssertionError: Error: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Ti === { sentinel: 'sentinel' }
      at onPromise2Rejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:95:32)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  97) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.4: If `onRejected` is not a function and `promise1` is rejected, `promise2` must be rejected with the same reason. `onRejected` is an object already-rejected:
     Uncaught AssertionError: Error: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Ti === { sentinel: 'sentinel' }
      at onPromise2Rejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:95:32)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  98) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.4: If `onRejected` is not a function and `promise1` is rejected, `promise2` must be rejected with the same reason. `onRejected` is an object immediately-rejected:
     Uncaught AssertionError: Error: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Ti === { sentinel: 'sentinel' }
      at onPromise2Rejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:95:32)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  99) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.4: If `onRejected` is not a function and `promise1` is rejected, `promise2` must be rejected with the same reason. `onRejected` is an object eventually-rejected:
     Uncaught AssertionError: Error: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Ti === { sentinel: 'sentinel' }
      at onPromise2Rejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:95:32)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  100) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.4: If `onRejected` is not a function and `promise1` is rejected, `promise2` must be rejected with the same reason. `onRejected` is an array containing a function already-rejected:
     Uncaught AssertionError: Error: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Ti === { sentinel: 'sentinel' }
      at onPromise2Rejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:95:32)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  101) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.4: If `onRejected` is not a function and `promise1` is rejected, `promise2` must be rejected with the same reason. `onRejected` is an array containing a function immediately-rejected:
     Uncaught AssertionError: Error: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Ti === { sentinel: 'sentinel' }
      at onPromise2Rejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:95:32)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  102) 2.2.7: `then` must return a promise: `promise2 = promise1.then(onFulfilled, onRejected)` 2.2.7.4: If `onRejected` is not a function and `promise1` is rejected, `promise2` must be rejected with the same reason. `onRejected` is an array containing a function eventually-rejected:
     Uncaught AssertionError: Error: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Ti === { sentinel: 'sentinel' }
      at onPromise2Rejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.2.7.js:95:32)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  103) 2.3.1: If `promise` and `x` refer to the same object, reject `promise` with a `TypeError' as the reason. via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  104) 2.3.1: If `promise` and `x` refer to the same object, reject `promise` with a `TypeError' as the reason. via return from a rejected promise:

      Uncaught AssertionError: false == true
      + expected - actual

      -false
      +true
      
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.1.js:30:13
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  105) 2.3.2: If `x` is a promise, adopt its state 2.3.2.1: If `x` is pending, `promise` must remain pending until `x` is fulfilled or rejected. via return from a fulfilled promise:

      Uncaught AssertionError: true === false
      + expected - actual

      -true
      +false
      
      at Timeout._onTimeout (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.2.js:52:24)

  106) 2.3.2: If `x` is a promise, adopt its state 2.3.2.1: If `x` is pending, `promise` must remain pending until `x` is fulfilled or rejected. via return from a rejected promise:

      Uncaught AssertionError: true === false
      + expected - actual

      -true
      +false
      
      at Timeout._onTimeout (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.2.js:53:24)

  107) 2.3.2: If `x` is a promise, adopt its state 2.3.2.2: If/when `x` is fulfilled, fulfill `promise` with the same value. `x` is already-fulfilled via return from a fulfilled promise:

      Uncaught AssertionError: {} === { sentinel: 'sentinel' }
      + expected - actual

      -{}
      +{
      +  "sentinel": "sentinel"
      +}
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.2.js:67:28)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  108) 2.3.2: If `x` is a promise, adopt its state 2.3.2.2: If/when `x` is fulfilled, fulfill `promise` with the same value. `x` is already-fulfilled via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  109) 2.3.2: If `x` is a promise, adopt its state 2.3.2.2: If/when `x` is fulfilled, fulfill `promise` with the same value. `x` is eventually-fulfilled via return from a fulfilled promise:

      Uncaught AssertionError: {} === { sentinel: 'sentinel' }
      + expected - actual

      -{}
      +{
      +  "sentinel": "sentinel"
      +}
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.2.js:86:28)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  110) 2.3.2: If `x` is a promise, adopt its state 2.3.2.2: If/when `x` is fulfilled, fulfill `promise` with the same value. `x` is eventually-fulfilled via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  111) 2.3.2: If `x` is a promise, adopt its state 2.3.2.3: If/when `x` is rejected, reject `promise` with the same reason. `x` is already-rejected via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  112) 2.3.2: If `x` is a promise, adopt its state 2.3.2.3: If/when `x` is rejected, reject `promise` with the same reason. `x` is already-rejected via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.2.js:101:28)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  113) 2.3.2: If `x` is a promise, adopt its state 2.3.2.3: If/when `x` is rejected, reject `promise` with the same reason. `x` is eventually-rejected via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  114) 2.3.2: If `x` is a promise, adopt its state 2.3.2.3: If/when `x` is rejected, reject `promise` with the same reason. `x` is eventually-rejected via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.2.js:120:28)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  115) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.1: Let `then` be `x.then` `x` is an object with null prototype via return from a fulfilled promise:

      Uncaught AssertionError: 0 === 1
      + expected - actual

      -0
      +1
      
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:146:28
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  116) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.1: Let `then` be `x.then` `x` is an object with null prototype via return from a rejected promise:
     Uncaught TypeError: Cannot convert object to primitive value
      at new Error (native)
      at reject (C:\CODE\Promise\Promise.js:45:26)
      at C:\CODE\Promise\Promise.js:88:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  117) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.1: Let `then` be `x.then` `x` is an object with normal Object.prototype via return from a fulfilled promise:

      Uncaught AssertionError: 0 === 1
      + expected - actual

      -0
      +1
      
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:174:28
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  118) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.1: Let `then` be `x.then` `x` is an object with normal Object.prototype via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  119) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.1: Let `then` be `x.then` `x` is a function via return from a fulfilled promise:

      Uncaught AssertionError: 0 === 1
      + expected - actual

      -0
      +1
      
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:204:28
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  120) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.1: Let `then` be `x.then` `x` is a function via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  121) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is `undefined` via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  122) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is `undefined` via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === [Function]
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:227:32
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  123) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is `null` via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  124) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is `null` via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === [Function]
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:227:32
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  125) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is `false` via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  126) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is `false` via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === [Function]
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:227:32
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  127) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is `0` via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  128) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is `0` via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === [Function]
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:227:32
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  129) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is an error via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  130) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is an error via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === [Function]
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:227:32
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  131) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is an error without a stack via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  132) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is an error without a stack via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === [Function]
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:227:32
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  133) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is a date via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  134) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is a date via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === [Function]
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:227:32
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  135) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is an object via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  136) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is an object via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === [Function]
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:227:32
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  137) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is an always-pending thenable via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  138) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is an always-pending thenable via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === [Function]
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:227:32
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  139) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is a fulfilled promise via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  140) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is a fulfilled promise via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === [Function]
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:227:32
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  141) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is a rejected promise via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  142) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.2: If retrieving the property `x.then` results in a thrown exception `e`, reject `promise` with `e` as the reason. `e` is a rejected promise via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === [Function]
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:227:32
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  143) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` Calls with `x` as `this` and two function arguments via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  144) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` Uses the original value of `then` via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  145) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is `undefined` `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Uncaught AssertionError: { then: [Function: then] } === undefined
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  146) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is `undefined` `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  147) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is `undefined` `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Uncaught AssertionError: { then: [Function: then] } === undefined
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  148) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is `undefined` `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  149) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is `null` `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Uncaught AssertionError: { then: [Function: then] } === null
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  150) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is `null` `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  151) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is `null` `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Uncaught AssertionError: { then: [Function: then] } === null
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  152) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is `null` `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  153) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is `false` `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Uncaught AssertionError: { then: [Function: then] } === false
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  154) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is `false` `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  155) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is `false` `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Uncaught AssertionError: { then: [Function: then] } === false
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  156) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is `false` `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  157) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is `5` `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Uncaught AssertionError: { then: [Function: then] } === 5
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  158) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is `5` `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  159) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is `5` `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Uncaught AssertionError: { then: [Function: then] } === 5
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  160) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is `5` `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  161) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is an object `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  162) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is an object `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  163) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is an object `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  164) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is an object `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  165) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is an array `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Uncaught AssertionError: { then: [Function: then] } === [ { sentinel: 'sentinel' } ]
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  166) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is an array `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  167) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is an array `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Uncaught AssertionError: { then: [Function: then] } === [ { sentinel: 'sentinel' } ]
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  168) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is not a thenable `y` is an array `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  169) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a synchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  170) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a synchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  171) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a synchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  172) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a synchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  173) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  174) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  175) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  176) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  177) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  178) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  179) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  180) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  181) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a thenable that tries to fulfill twice `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  182) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a thenable that tries to fulfill twice `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  183) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a thenable that tries to fulfill twice `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  184) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a thenable that tries to fulfill twice `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  185) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a thenable that fulfills but then throws `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  186) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a thenable that fulfills but then throws `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  187) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a thenable that fulfills but then throws `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  188) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a thenable that fulfills but then throws `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  189) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an already-fulfilled promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  190) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an already-fulfilled promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  191) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an already-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  192) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an already-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  193) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an eventually-fulfilled promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  194) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an eventually-fulfilled promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  195) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an eventually-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  196) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an eventually-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  197) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a synchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  198) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a synchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  199) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a synchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  200) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a synchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  201) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an asynchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  202) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an asynchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  203) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an asynchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  204) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an asynchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  205) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a synchronously-rejected one-time thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  206) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a synchronously-rejected one-time thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  207) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a synchronously-rejected one-time thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  208) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a synchronously-rejected one-time thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  209) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a thenable that immediately throws in `then` `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  210) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a thenable that immediately throws in `then` `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  211) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a thenable that immediately throws in `then` `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  212) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is a thenable that immediately throws in `then` `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  213) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an object with a throwing `then` accessor `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  214) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an object with a throwing `then` accessor `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  215) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an object with a throwing `then` accessor `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  216) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an object with a throwing `then` accessor `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  217) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an already-rejected promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  218) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an already-rejected promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  219) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an already-rejected promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  220) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an already-rejected promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  221) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an eventually-rejected promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  222) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an eventually-rejected promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  223) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an eventually-rejected promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  224) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable `y` is an eventually-rejected promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  225) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  226) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  227) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  228) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  229) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  230) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  231) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  232) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  233) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  234) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  235) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  236) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  237) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a thenable that tries to fulfill twice `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  238) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a thenable that tries to fulfill twice `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  239) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a thenable that tries to fulfill twice `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  240) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a thenable that tries to fulfill twice `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  241) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a thenable that fulfills but then throws `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  242) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a thenable that fulfills but then throws `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  243) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a thenable that fulfills but then throws `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  244) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a thenable that fulfills but then throws `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  245) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an already-fulfilled promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  246) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an already-fulfilled promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  247) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an already-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  248) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an already-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  249) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an eventually-fulfilled promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  250) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an eventually-fulfilled promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  251) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an eventually-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  252) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an eventually-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  253) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a synchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  254) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a synchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  255) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a synchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  256) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a synchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  257) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an asynchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  258) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an asynchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  259) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an asynchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  260) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an asynchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  261) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a synchronously-rejected one-time thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  262) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a synchronously-rejected one-time thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  263) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a synchronously-rejected one-time thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  264) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a synchronously-rejected one-time thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  265) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a thenable that immediately throws in `then` `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  266) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a thenable that immediately throws in `then` `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  267) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a thenable that immediately throws in `then` `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  268) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for a thenable that immediately throws in `then` `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  269) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an object with a throwing `then` accessor `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  270) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an object with a throwing `then` accessor `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  271) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an object with a throwing `then` accessor `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  272) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an object with a throwing `then` accessor `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  273) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an already-rejected promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  274) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an already-rejected promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  275) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an already-rejected promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  276) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an already-rejected promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  277) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an eventually-rejected promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  278) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an eventually-rejected promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  279) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an eventually-rejected promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  280) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled custom thenable for an eventually-rejected promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  281) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  282) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  283) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  284) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  285) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  286) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  287) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  288) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  289) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  290) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  291) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  292) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  293) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a thenable that tries to fulfill twice `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  294) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a thenable that tries to fulfill twice `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  295) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a thenable that tries to fulfill twice `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  296) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a thenable that tries to fulfill twice `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  297) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a thenable that fulfills but then throws `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  298) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a thenable that fulfills but then throws `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  299) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a thenable that fulfills but then throws `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  300) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a thenable that fulfills but then throws `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  301) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an already-fulfilled promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  302) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an already-fulfilled promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  303) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an already-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  304) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an already-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  305) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an eventually-fulfilled promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  306) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an eventually-fulfilled promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  307) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an eventually-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  308) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an eventually-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  309) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a synchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  310) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a synchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  311) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a synchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  312) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a synchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  313) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an asynchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  314) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an asynchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  315) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an asynchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  316) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an asynchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  317) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a synchronously-rejected one-time thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  318) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a synchronously-rejected one-time thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  319) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a synchronously-rejected one-time thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  320) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a synchronously-rejected one-time thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  321) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a thenable that immediately throws in `then` `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  322) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a thenable that immediately throws in `then` `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  323) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a thenable that immediately throws in `then` `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  324) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for a thenable that immediately throws in `then` `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  325) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an object with a throwing `then` accessor `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  326) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an object with a throwing `then` accessor `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  327) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an object with a throwing `then` accessor `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  328) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an object with a throwing `then` accessor `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  329) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an already-rejected promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  330) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an already-rejected promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  331) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an already-rejected promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  332) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an already-rejected promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  333) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an eventually-rejected promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  334) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an eventually-rejected promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  335) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an eventually-rejected promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  336) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an asynchronously-fulfilled custom thenable for an eventually-rejected promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  337) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  338) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  339) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  340) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  341) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  342) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  343) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  344) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  345) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  346) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  347) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  348) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  349) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a thenable that tries to fulfill twice `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  350) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a thenable that tries to fulfill twice `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  351) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a thenable that tries to fulfill twice `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  352) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a thenable that tries to fulfill twice `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  353) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a thenable that fulfills but then throws `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  354) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a thenable that fulfills but then throws `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  355) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a thenable that fulfills but then throws `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  356) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a thenable that fulfills but then throws `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  357) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an already-fulfilled promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  358) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an already-fulfilled promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  359) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an already-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  360) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an already-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  361) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an eventually-fulfilled promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  362) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an eventually-fulfilled promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  363) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an eventually-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  364) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an eventually-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  365) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a synchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  366) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a synchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  367) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a synchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  368) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a synchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  369) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an asynchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  370) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an asynchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  371) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an asynchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  372) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an asynchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  373) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a synchronously-rejected one-time thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  374) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a synchronously-rejected one-time thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  375) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a synchronously-rejected one-time thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  376) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a synchronously-rejected one-time thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  377) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a thenable that immediately throws in `then` `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  378) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a thenable that immediately throws in `then` `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  379) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a thenable that immediately throws in `then` `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  380) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for a thenable that immediately throws in `then` `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  381) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an object with a throwing `then` accessor `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  382) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an object with a throwing `then` accessor `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  383) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an object with a throwing `then` accessor `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  384) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an object with a throwing `then` accessor `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  385) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an already-rejected promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  386) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an already-rejected promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  387) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an already-rejected promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  388) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an already-rejected promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  389) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an eventually-rejected promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  390) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an eventually-rejected promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  391) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an eventually-rejected promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  392) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a synchronously-fulfilled one-time thenable for an eventually-rejected promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  393) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  394) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  395) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  396) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  397) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  398) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  399) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  400) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  401) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  402) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  403) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  404) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  405) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a thenable that tries to fulfill twice `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  406) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a thenable that tries to fulfill twice `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  407) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a thenable that tries to fulfill twice `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  408) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a thenable that tries to fulfill twice `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  409) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a thenable that fulfills but then throws `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  410) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a thenable that fulfills but then throws `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  411) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a thenable that fulfills but then throws `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  412) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a thenable that fulfills but then throws `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  413) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an already-fulfilled promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  414) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an already-fulfilled promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  415) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an already-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  416) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an already-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  417) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an eventually-fulfilled promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  418) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an eventually-fulfilled promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  419) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an eventually-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  420) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an eventually-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  421) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a synchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  422) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a synchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  423) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a synchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  424) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a synchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  425) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an asynchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  426) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an asynchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  427) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an asynchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  428) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an asynchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  429) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a synchronously-rejected one-time thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  430) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a synchronously-rejected one-time thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  431) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a synchronously-rejected one-time thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  432) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a synchronously-rejected one-time thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  433) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a thenable that immediately throws in `then` `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  434) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a thenable that immediately throws in `then` `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  435) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a thenable that immediately throws in `then` `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  436) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for a thenable that immediately throws in `then` `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  437) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an object with a throwing `then` accessor `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  438) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an object with a throwing `then` accessor `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  439) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an object with a throwing `then` accessor `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  440) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an object with a throwing `then` accessor `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  441) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an already-rejected promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  442) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an already-rejected promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  443) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an already-rejected promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  444) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an already-rejected promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  445) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an eventually-rejected promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  446) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an eventually-rejected promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  447) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an eventually-rejected promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  448) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that tries to fulfill twice for an eventually-rejected promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  449) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  450) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  451) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  452) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  453) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  454) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  455) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  456) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  457) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  458) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  459) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  460) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  461) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a thenable that tries to fulfill twice `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  462) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a thenable that tries to fulfill twice `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  463) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a thenable that tries to fulfill twice `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  464) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a thenable that tries to fulfill twice `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  465) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a thenable that fulfills but then throws `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  466) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a thenable that fulfills but then throws `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  467) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a thenable that fulfills but then throws `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  468) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a thenable that fulfills but then throws `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  469) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an already-fulfilled promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  470) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an already-fulfilled promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  471) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an already-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  472) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an already-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  473) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an eventually-fulfilled promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  474) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an eventually-fulfilled promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  475) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an eventually-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  476) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an eventually-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  477) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a synchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  478) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a synchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  479) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a synchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  480) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a synchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  481) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an asynchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  482) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an asynchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  483) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an asynchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  484) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an asynchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  485) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a synchronously-rejected one-time thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  486) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a synchronously-rejected one-time thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  487) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a synchronously-rejected one-time thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  488) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a synchronously-rejected one-time thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  489) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a thenable that immediately throws in `then` `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  490) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a thenable that immediately throws in `then` `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  491) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a thenable that immediately throws in `then` `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  492) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for a thenable that immediately throws in `then` `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  493) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an object with a throwing `then` accessor `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  494) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an object with a throwing `then` accessor `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  495) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an object with a throwing `then` accessor `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  496) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an object with a throwing `then` accessor `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  497) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an already-rejected promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  498) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an already-rejected promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  499) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an already-rejected promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  500) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an already-rejected promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  501) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an eventually-rejected promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  502) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an eventually-rejected promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  503) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an eventually-rejected promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  504) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is a thenable that fulfills but then throws for an eventually-rejected promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  505) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  506) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  507) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  508) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  509) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  510) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  511) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  512) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  513) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  514) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  515) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  516) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  517) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a thenable that tries to fulfill twice `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  518) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a thenable that tries to fulfill twice `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  519) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a thenable that tries to fulfill twice `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  520) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a thenable that tries to fulfill twice `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  521) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a thenable that fulfills but then throws `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  522) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a thenable that fulfills but then throws `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  523) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a thenable that fulfills but then throws `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  524) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a thenable that fulfills but then throws `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  525) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an already-fulfilled promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  526) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an already-fulfilled promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  527) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an already-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  528) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an already-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  529) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an eventually-fulfilled promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  530) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an eventually-fulfilled promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  531) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an eventually-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  532) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an eventually-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  533) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a synchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  534) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a synchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  535) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a synchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  536) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a synchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  537) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an asynchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  538) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an asynchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  539) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an asynchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  540) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an asynchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  541) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a synchronously-rejected one-time thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  542) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a synchronously-rejected one-time thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  543) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a synchronously-rejected one-time thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  544) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a synchronously-rejected one-time thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  545) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a thenable that immediately throws in `then` `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  546) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a thenable that immediately throws in `then` `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  547) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a thenable that immediately throws in `then` `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  548) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for a thenable that immediately throws in `then` `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  549) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an object with a throwing `then` accessor `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  550) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an object with a throwing `then` accessor `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  551) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an object with a throwing `then` accessor `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  552) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an object with a throwing `then` accessor `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  553) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an already-rejected promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  554) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an already-rejected promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  555) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an already-rejected promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  556) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an already-rejected promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  557) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an eventually-rejected promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  558) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an eventually-rejected promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  559) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an eventually-rejected promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  560) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an already-fulfilled promise for an eventually-rejected promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  561) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  562) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  563) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  564) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a synchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  565) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  566) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  567) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  568) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an asynchronously-fulfilled custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  569) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  570) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  571) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  572) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a synchronously-fulfilled one-time thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  573) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a thenable that tries to fulfill twice `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  574) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a thenable that tries to fulfill twice `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  575) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a thenable that tries to fulfill twice `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  576) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a thenable that tries to fulfill twice `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  577) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a thenable that fulfills but then throws `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  578) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a thenable that fulfills but then throws `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  579) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a thenable that fulfills but then throws `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  580) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a thenable that fulfills but then throws `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  581) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an already-fulfilled promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  582) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an already-fulfilled promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  583) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an already-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  584) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an already-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  585) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an eventually-fulfilled promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  586) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an eventually-fulfilled promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  587) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an eventually-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at onPromiseFulfilled (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:98:20)
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  588) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an eventually-fulfilled promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  589) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a synchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  590) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a synchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  591) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a synchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  592) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a synchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  593) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an asynchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  594) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an asynchronously-rejected custom thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  595) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an asynchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  596) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an asynchronously-rejected custom thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  597) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a synchronously-rejected one-time thenable `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  598) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a synchronously-rejected one-time thenable `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  599) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a synchronously-rejected one-time thenable `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  600) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a synchronously-rejected one-time thenable `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  601) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a thenable that immediately throws in `then` `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  602) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a thenable that immediately throws in `then` `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  603) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a thenable that immediately throws in `then` `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  604) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for a thenable that immediately throws in `then` `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  605) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an object with a throwing `then` accessor `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  606) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an object with a throwing `then` accessor `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  607) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an object with a throwing `then` accessor `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  608) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an object with a throwing `then` accessor `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  609) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an already-rejected promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  610) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an already-rejected promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  611) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an already-rejected promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  612) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an already-rejected promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  613) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an eventually-rejected promise `then` calls `resolvePromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  614) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an eventually-rejected promise `then` calls `resolvePromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  615) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an eventually-rejected promise `then` calls `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  616) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.1: If/when `resolvePromise` is called with value `y`, run `[[Resolve]](promise, y)` `y` is a thenable for a thenable `y` is an eventually-fulfilled promise for an eventually-rejected promise `then` calls `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:107:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  617) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is `undefined` `then` calls `rejectPromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  618) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is `undefined` `then` calls `rejectPromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === undefined
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  619) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is `undefined` `then` calls `rejectPromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  620) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is `undefined` `then` calls `rejectPromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === undefined
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  621) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is `null` `then` calls `rejectPromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  622) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is `null` `then` calls `rejectPromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === null
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  623) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is `null` `then` calls `rejectPromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  624) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is `null` `then` calls `rejectPromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === null
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  625) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is `false` `then` calls `rejectPromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  626) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is `false` `then` calls `rejectPromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === false
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  627) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is `false` `then` calls `rejectPromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  628) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is `false` `then` calls `rejectPromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === false
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  629) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is `0` `then` calls `rejectPromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  630) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is `0` `then` calls `rejectPromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === 0
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  631) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is `0` `then` calls `rejectPromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  632) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is `0` `then` calls `rejectPromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === 0
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  633) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is an error `then` calls `rejectPromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  634) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is an error `then` calls `rejectPromise` synchronously via return from a rejected promise:

      Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === Error
    at Object.exports.an error (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\helpers\reasons.js:28:12)
    
      + expected - actual

      
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  635) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is an error `then` calls `rejectPromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  636) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is an error `then` calls `rejectPromise` asynchronously via return from a rejected promise:

      Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === Error
    at Object.exports.an error (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\helpers\reasons.js:28:12)
    
      + expected - actual

      
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  637) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is an error without a stack `then` calls `rejectPromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  638) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is an error without a stack `then` calls `rejectPromise` synchronously via return from a rejected promise:

      Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === [Error]
      + expected - actual

      
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  639) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is an error without a stack `then` calls `rejectPromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  640) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is an error without a stack `then` calls `rejectPromise` asynchronously via return from a rejected promise:

      Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === [Error]
      + expected - actual

      
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  641) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is a date `then` calls `rejectPromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  642) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is a date `then` calls `rejectPromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === 2017-04-09T19:05:20.455Z
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  643) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is a date `then` calls `rejectPromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  644) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is a date `then` calls `rejectPromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === 2017-04-09T19:05:20.455Z
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  645) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is an object `then` calls `rejectPromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  646) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is an object `then` calls `rejectPromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === {}
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  647) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is an object `then` calls `rejectPromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  648) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is an object `then` calls `rejectPromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === {}
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  649) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is an always-pending thenable `then` calls `rejectPromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  650) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is an always-pending thenable `then` calls `rejectPromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { then: [Function: then] }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  651) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is an always-pending thenable `then` calls `rejectPromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  652) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is an always-pending thenable `then` calls `rejectPromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { then: [Function: then] }
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  653) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is a fulfilled promise `then` calls `rejectPromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  654) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is a fulfilled promise `then` calls `rejectPromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === {}
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  655) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is a fulfilled promise `then` calls `rejectPromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  656) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is a fulfilled promise `then` calls `rejectPromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === {}
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  657) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is a rejected promise `then` calls `rejectPromise` synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  658) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is a rejected promise `then` calls `rejectPromise` synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === {}
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  659) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is a rejected promise `then` calls `rejectPromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  660) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.2: If/when `rejectPromise` is called with reason `r`, reject `promise` with `r` `r` is a rejected promise `then` calls `rejectPromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === {}
      at onPromiseRejected (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:116:20)
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  661) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `resolvePromise` then `rejectPromise`, both synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:372:32
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  662) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `resolvePromise` then `rejectPromise`, both synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  663) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `resolvePromise` synchronously then `rejectPromise` asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:393:32
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  664) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `resolvePromise` synchronously then `rejectPromise` asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  665) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `resolvePromise` then `rejectPromise`, both asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:416:32
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  666) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `resolvePromise` then `rejectPromise`, both asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  667) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `resolvePromise` with an asynchronously-fulfilled promise, then calling `rejectPromise`, both synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:440:32
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  668) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `resolvePromise` with an asynchronously-fulfilled promise, then calling `rejectPromise`, both synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  669) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `resolvePromise` with an asynchronously-rejected promise, then calling `rejectPromise`, both synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  670) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `resolvePromise` with an asynchronously-rejected promise, then calling `rejectPromise`, both synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:464:32
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  671) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `rejectPromise` then `resolvePromise`, both synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  672) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `rejectPromise` then `resolvePromise`, both synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:482:32
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  673) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `rejectPromise` synchronously then `resolvePromise` asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  674) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `rejectPromise` synchronously then `resolvePromise` asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:503:32
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  675) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `rejectPromise` then `resolvePromise`, both asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  676) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `rejectPromise` then `resolvePromise`, both asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:526:32
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  677) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `resolvePromise` twice synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:544:32
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  678) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `resolvePromise` twice synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  679) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `resolvePromise` twice, first synchronously then asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:565:32
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  680) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `resolvePromise` twice, first synchronously then asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  681) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `resolvePromise` twice, both times asynchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:588:32
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  682) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `resolvePromise` twice, both times asynchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  683) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `resolvePromise` with an asynchronously-fulfilled promise, then calling it again, both times synchronously via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:612:32
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  684) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `resolvePromise` with an asynchronously-fulfilled promise, then calling it again, both times synchronously via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  685) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `resolvePromise` with an asynchronously-rejected promise, then calling it again, both times synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  686) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `resolvePromise` with an asynchronously-rejected promise, then calling it again, both times synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:636:32
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  687) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `rejectPromise` twice synchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  688) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `rejectPromise` twice synchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:654:32
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  689) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `rejectPromise` twice, first synchronously then asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  690) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `rejectPromise` twice, first synchronously then asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:675:32
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  691) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `rejectPromise` twice, both times asynchronously via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  692) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. calling `rejectPromise` twice, both times asynchronously via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:698:32
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  693) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.3: If both `resolvePromise` and `rejectPromise` are called, or multiple calls to the same argument are made, the first call takes precedence, and any further calls are ignored. saving and abusing `resolvePromise` and `rejectPromise` via return from a fulfilled promise:
     Uncaught TypeError: savedResolvePromise is not a function
      at Timeout._onTimeout (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:742:25)

  694) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.4: If calling `then` throws an exception `e`, 2.3.3.3.4.1: If `resolvePromise` or `rejectPromise` have been called, ignore it. `resolvePromise` was called with a non-thenable via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:771:36
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  695) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.4: If calling `then` throws an exception `e`, 2.3.3.3.4.1: If `resolvePromise` or `rejectPromise` have been called, ignore it. `resolvePromise` was called with a non-thenable via return from a rejected promise:

      Uncaught AssertionError: 0 === 1
      + expected - actual

      -0
      +1
      
      at Timeout._onTimeout (C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:749:32)
      at _combinedTickCallback (internal/process/next_tick.js:77:11)
      at process._tickCallback (internal/process/next_tick.js:104:9)

  696) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.4: If calling `then` throws an exception `e`, 2.3.3.3.4.1: If `resolvePromise` or `rejectPromise` have been called, ignore it. `resolvePromise` was called with an asynchronously-fulfilled promise via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:794:36
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  697) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.4: If calling `then` throws an exception `e`, 2.3.3.3.4.1: If `resolvePromise` or `rejectPromise` have been called, ignore it. `resolvePromise` was called with an asynchronously-fulfilled promise via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  698) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.4: If calling `then` throws an exception `e`, 2.3.3.3.4.1: If `resolvePromise` or `rejectPromise` have been called, ignore it. `resolvePromise` was called with an asynchronously-rejected promise via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  699) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.4: If calling `then` throws an exception `e`, 2.3.3.3.4.1: If `resolvePromise` or `rejectPromise` have been called, ignore it. `resolvePromise` was called with an asynchronously-rejected promise via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:817:36
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  700) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.4: If calling `then` throws an exception `e`, 2.3.3.3.4.1: If `resolvePromise` or `rejectPromise` have been called, ignore it. `rejectPromise` was called via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  701) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.4: If calling `then` throws an exception `e`, 2.3.3.3.4.1: If `resolvePromise` or `rejectPromise` have been called, ignore it. `rejectPromise` was called via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:835:36
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  702) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.4: If calling `then` throws an exception `e`, 2.3.3.3.4.1: If `resolvePromise` or `rejectPromise` have been called, ignore it. `resolvePromise` then `rejectPromise` were called via return from a fulfilled promise:

      Uncaught AssertionError: { then: [Function: then] } === { sentinel: 'sentinel' }
      + expected - actual

       {
      -  "then": [Function]
      +  "sentinel": "sentinel"
       }
      
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:854:36
      at C:\CODE\Promise\Promise.js:82:29
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  703) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.4: If calling `then` throws an exception `e`, 2.3.3.3.4.1: If `resolvePromise` or `rejectPromise` have been called, ignore it. `resolvePromise` then `rejectPromise` were called via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  704) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.4: If calling `then` throws an exception `e`, 2.3.3.3.4.1: If `resolvePromise` or `rejectPromise` have been called, ignore it. `rejectPromise` then `resolvePromise` were called via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  705) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.4: If calling `then` throws an exception `e`, 2.3.3.3.4.1: If `resolvePromise` or `rejectPromise` have been called, ignore it. `rejectPromise` then `resolvePromise` were called via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:873:36
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  706) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.4: If calling `then` throws an exception `e`, 2.3.3.3.4.2: Otherwise, reject `promise` with `e` as the reason. straightforward case via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  707) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.4: If calling `then` throws an exception `e`, 2.3.3.3.4.2: Otherwise, reject `promise` with `e` as the reason. straightforward case via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:892:36
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  708) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.4: If calling `then` throws an exception `e`, 2.3.3.3.4.2: Otherwise, reject `promise` with `e` as the reason. `resolvePromise` is called asynchronously before the `throw` via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  709) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.4: If calling `then` throws an exception `e`, 2.3.3.3.4.2: Otherwise, reject `promise` with `e` as the reason. `resolvePromise` is called asynchronously before the `throw` via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:912:36
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  710) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.4: If calling `then` throws an exception `e`, 2.3.3.3.4.2: Otherwise, reject `promise` with `e` as the reason. `rejectPromise` is called asynchronously before the `throw` via return from a fulfilled promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  711) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.3: If `then` is a function, call it with `x` as `this`, first argument `resolvePromise`, and second argument `rejectPromise` 2.3.3.3.4: If calling `then` throws an exception `e`, 2.3.3.3.4.2: Otherwise, reject `promise` with `e` as the reason. `rejectPromise` is called asynchronously before the `throw` via return from a rejected promise:
     Uncaught AssertionError: Error: [object Object]
    at reject (C:\CODE\Promise\Promise.js:45:26)
    at C:\CODE\Promise\Promise.js:88:29
    at Timeout._ === { sentinel: 'sentinel' }
      at C:\CODE\Promise\node_modules\promises-aplus-tests\lib\tests\2.3.3.js:932:36
      at C:\CODE\Promise\Promise.js:88:33
      at Timeout._onTimeout (C:\CODE\Promise\Promise.js:53:21)

  712) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.4: If `then` is not a function, fulfill promise with `x` `then` is `5` via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  713) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.4: If `then` is not a function, fulfill promise with `x` `then` is an object via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  714) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.4: If `then` is not a function, fulfill promise with `x` `then` is an array containing a function via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  715) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.4: If `then` is not a function, fulfill promise with `x` `then` is a regular expression via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  716) 2.3.3: Otherwise, if `x` is an object or function, 2.3.3.4: If `then` is not a function, fulfill promise with `x` `then` is an object inheriting from `Function.prototype` via return from a rejected promise:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  717) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `undefined` already-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  718) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `undefined` immediately-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  719) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `undefined` eventually-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  720) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `null` already-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  721) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `null` immediately-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  722) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `null` eventually-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  723) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `false` already-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  724) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `false` immediately-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  725) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `false` eventually-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  726) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `true` already-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  727) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `true` immediately-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  728) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `true` eventually-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  729) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `0` already-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  730) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `0` immediately-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  731) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `0` eventually-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  732) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `true` with `Boolean.prototype` modified to have a `then` method already-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  733) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `true` with `Boolean.prototype` modified to have a `then` method immediately-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  734) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `true` with `Boolean.prototype` modified to have a `then` method eventually-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  735) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `1` with `Number.prototype` modified to have a `then` method already-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  736) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `1` with `Number.prototype` modified to have a `then` method immediately-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)

  737) 2.3.4: If `x` is not an object or function, fulfill `promise` with `x` The value is `1` with `Number.prototype` modified to have a `then` method eventually-rejected:
     Error: timeout of 200ms exceeded. Ensure the done() callback is being called in this test.
      at Timeout.<anonymous> (C:\CODE\Promise\node_modules\mocha\lib\runnable.js:226:19)



